# str_detect(Mnames, "\\)$") ~ str_extract(Mnames, "^\\w+\\."), # O. Rotreklová (BRNU)
# str_detect(Mnames, "^\\w\\.\\sa\\s\\w\\.\\s\\w+$") ~ str_extract(Mnames, "\\w\\.\\sa\\s\\w\\."), # L. a J. Reitmyerovi
# str_detect(Mnames, "Ekrt L.|Hrabovský S.|Štech M.|Chytil P.|Danihelka J.") ~ word(Mnames, 2), # "Ekrt L."
# str_detect(Mnames, "^\\w+\\.$") ~ str_extract(Mnames, ""), # al.
TRUE ~ "")) %>%
# MTIT = case_when(str_detect(MJM, "doc.|Ing.") ~ str_extract(Mnames, "doc.|Ing."), TRUE ~ ""),
# MJM = case_when(str_detect(MJM, "doc.|Ing.") ~  str_remove(MJM, "doc.|Ing."), TRUE ~ MJM)) %>%
replace(is.na(.), "") %>%
mutate(MKODOS = paste(MPJM, MJM)) %>%
group_by(MID) %>%
pivot_wider(names_from = source, values_from = c(MPJM, MJM, MKODOS)) %>%  # back to wide
select(-Mnames) %>%
# mutate_all(~na_if(., '')) %>%
fill(MPJM_M1, .direction = "down") %>%
fill(MPJM_M2, .direction = "down") %>%
fill(MPJM_M2, .direction = "up") %>%
fill(MPJM_M3, .direction = "up") %>%
fill(MJM_M1, .direction = "down") %>%
fill(MJM_M2, .direction = "down") %>%
fill(MJM_M2, .direction = "up") %>%
fill(MJM_M3, .direction = "up") %>%
fill(MKODOS_M1, .direction = "down") %>%
fill(MKODOS_M2, .direction = "down") %>%
fill(MKODOS_M2, .direction = "up") %>%
fill(MKODOS_M3, .direction = "up") %>%
distinct() %>%
ungroup() %>%
unite(MKODOS_sbe, c("MKODOS_M1", "MKODOS_M2", "MKODOS_M3"), sep = ", ", na.rm = T, remove = FALSE) %>%
relocate(MKODOS_sbe, .after = "Msberatel") %>%
mutate(MKODOS_sbe = case_when(Mforma == "kolektiv" ~ sub(",([^,]*)$", " et\\1", MKODOS_sbe),
TRUE ~ MKODOS_sbe)) %>%
# select(-(last_col(offset = 10):last_col())) %>%                                    # pozor pri zmene poradi sekci !!!!
select(-Mforma, -Msberatel, -M, -MRforma, -contains(c("M1", "M2", "M3")))
# urcil a revize
urcil <- sber %>%
mutate(urcil = ifelse(urcil == "E. Burša,, rev. J. Chrtek Jun.", "E. Burša, rev. J. Chrtek Jun.", urcil),
urcil = ifelse(urcil == "D. Hlisnikovskýet al.", "D. Hlisnikovský et al.", urcil),
urcil = ifelse(urcil == "Z .Kilián", "Z. Kilián", urcil),
urcil = ifelse(str_detect(urcil, "O . Rotreklová"), "O. Rotreklová", urcil),
urcil = ifelse(str_detect(urcil, "E.  Burša"), "E. Burša", urcil),
Mforma = ifelse(str_detect(urcil, "rev\\.|rev\\s"), "revize",
ifelse(str_detect(urcil, " et | & "), "kolektiv", "")),
MID = seq_along(urcil)) %>%
relocate(Mforma, .before = "urcil") %>%
separate(urcil, into=c("M", "MR") ,
sep="rev\\s|,\\srev\\s|,\\srev\\.|,\\s\\srev\\.|,\\s\\srev\\s|;\\srev\\.|\\srev\\.|rev\\.", # oddeleni revizi do samost. sloupce
remove = F, extra = "merge") %>%
mutate(MR_urc = gsub("rev.", "", MR), # nahradit rev prazdnym retezcem
MR_urc = str_trim(MR_urc), # oriznout whitespace
M = gsub("rev.|det.", "", M),  # nahradit rev a det prazdnym retezcem
MREVDAT_urc = case_when(str_detect(M, "\\d+") ~  str_extract(M, "\\d+\\.\\d+\\.\\d+"), TRUE ~ ""), # pokud ma sloupec cislice
M = case_when(str_detect(M, "\\d+") ~  str_remove(M, ",\\s\\d+\\.\\d+\\.\\d+"), TRUE ~ M), # vymazat datum
MPOZN_urc = case_when(str_detect(M, "\\(.+\\)|det\\.|2010 - potvrdil |adnot.") ~
str_extract(M, "\\(.+\\)|det\\.|2010 - potvrdil |adnot."), TRUE ~ ""),
M = case_when(str_detect(M, "\\(.+\\)|det\\.|2010 - potvrdil |adnot.") ~
str_remove(M, "\\(.+\\)|det\\.|2010 - potvrdil |adnot."), TRUE ~ M),
M = str_trim(M),
MRforma = ifelse(str_detect(MR_urc, " et | & "), "kolektiv", "revize")) %>%
relocate(MRforma, .before = "MR_urc") %>%
separate(M, into=c("M1", "M2", "M3") , sep=",| et | a(?! J.)| &", remove = F, extra = "merge") %>%
pivot_longer(
cols = c(
M1, M2, M3,
),
names_to = "source", # poradi techniky
values_to = "Mnames",
values_drop_na = TRUE) %>%
mutate(
Mnames = str_trim(Mnames),
MPJM = case_when(str_detect(Mnames, "^\\w\\.\\s\\w\\s\\w\\.\\s\\w+$") ~ str_extract(Mnames, "\\w+$"), # L. a J. Reitmyerovi
str_detect(Mnames, "^\\w+$") ~ str_extract(Mnames, "^\\w+$"), # Vrubel
str_detect(Mnames, "^\\w\\.\\w+$") ~ str_extract(Mnames, "\\b\\w+$"), # A.Hájková
str_detect(Mnames, "^\\w+\\.$") ~ str_extract(Mnames, "^\\w+\\.$"), # D., al.
str_detect(Mnames, "^\\w\\.\\s\\w\\.\\s\\w+$") ~ str_extract(Mnames, "\\w+$"),  # R. J. Vašut
str_detect(Mnames, "^\\w\\.\\w\\.\\s\\w+$") ~ str_extract(Mnames, "\\w+$"),  # R.J. Vašut
str_detect(Mnames, "^\\w+\\s\\w+$") ~ str_extract(Mnames, "\\w+$"),  # Miroslava Bilkova
str_detect(Mnames, "^\\w\\.\\s\\w+\\s\\w+\\.$") ~ str_extract(Mnames, "\\w+\\s\\w+\\.$"), # J. Chrtek jun.
str_detect(Mnames, "^\\w\\.\\s\\w+\\s\\w+$") ~ str_extract(Mnames, "\\w+\\s\\w+$"), # J. Chrtek jun
str_detect(Mnames, "\\)$") ~ str_extract(Mnames, "\\w+\\s\\(\\w+\\)"), # O. Rotreklová (BRNU)
str_detect(Mnames, "^[:upper:]{3}$") ~ str_extract(Mnames, "^[:upper:]{3}$"), # PVO
str_detect(Mnames, "Ekrt L.|Hrabovský S.|Štech M.|Chytil P.|Danihelka J.") ~ word(Mnames, 1), # "Ekrt L."
TRUE ~ word(Mnames, 2)),
MJM = case_when(str_detect(Mnames, "^\\w+\\.\\s+\\w+$") ~ str_extract(Mnames, "^\\w+\\."),  	# V. Dvořák
str_detect(Mnames, "^\\w+\\.\\w+$") ~ str_extract(Mnames, "^\\w+\\."),  # 	J.Danihelka
str_detect(Mnames, "^\\w\\.\\s\\w\\.\\s\\w+$") ~ str_extract(Mnames, "\\w\\.\\s\\w\\."),  # R. J. Vašut
str_detect(Mnames, "^\\w\\.\\w\\.\\s\\w+$") ~ str_extract(Mnames, "\\w\\.\\w\\."),  # R.J. Vašut
str_detect(Mnames, "^\\w+\\s\\w+$") ~ str_extract(Mnames, "^\\w+"),  # Miroslava Bilkova
str_detect(Mnames, "^\\w\\.\\s\\w+\\s\\w+\\.$") ~ str_extract(Mnames, "^\\w+\\."), # J. Chrtek jun.
str_detect(Mnames, "^\\w\\.\\s\\w+\\s\\w+$") ~ str_extract(Mnames, "^\\w+"), # J. Chrtek jun
str_detect(Mnames, "\\)$") ~ str_extract(Mnames, "^\\w+\\."), # O. Rotreklová (BRNU)
str_detect(Mnames, "^\\w\\.\\sa\\s\\w\\.\\s\\w+$") ~ str_extract(Mnames, "\\w\\.\\sa\\s\\w\\."), # L. a J. Reitmyerovi
str_detect(Mnames, "Ekrt L.|Hrabovský S.|Štech M.|Chytil P.|Danihelka J.") ~ word(Mnames, 2), # "Ekrt L."
# str_detect(Mnames, "^\\w+\\.$") ~ str_extract(Mnames, ""), # al.
TRUE ~ ""),
MTIT_urc = case_when(str_detect(MJM, "doc.|Ing.") ~ str_extract(Mnames, "doc.|Ing."), TRUE ~ ""),
MJM = case_when(str_detect(MJM, "doc.|Ing.") ~  str_remove(MJM, "doc.|Ing."), TRUE ~ MJM)) %>%
# replace(is.na(.), "") %>%
mutate(MKODOS = paste(MPJM, MJM)) %>%
group_by(MID) %>%
pivot_wider(names_from = source, values_from = c(MPJM, MJM, MTIT_urc, MKODOS)) %>%
select(-Mnames) %>%
fill(MPJM_M1, .direction = "down") %>%
fill(MPJM_M2, .direction = "down") %>%
fill(MPJM_M2, .direction = "up") %>%
fill(MPJM_M3, .direction = "up") %>%
fill(MJM_M1, .direction = "down") %>%
fill(MJM_M2, .direction = "down") %>%
fill(MJM_M2, .direction = "up") %>%
fill(MJM_M3, .direction = "up") %>%
fill(MTIT_urc_M1, .direction = "down") %>%
fill(MTIT_urc_M2, .direction = "down") %>%
fill(MTIT_urc_M2, .direction = "up") %>%
fill(MTIT_urc_M3, .direction = "up") %>%
fill(MKODOS_M1, .direction = "down") %>%
fill(MKODOS_M2, .direction = "down") %>%
fill(MKODOS_M2, .direction = "up") %>%
fill(MKODOS_M3, .direction = "up") %>%
distinct() %>%
ungroup() %>%
unite(MKODOS_urc, c("MKODOS_M1", "MKODOS_M2", "MKODOS_M3"), sep = ", ", na.rm = T, remove = FALSE) %>%
relocate(MKODOS_urc, .after = "urcil") %>%
mutate(MKODOS_urc =  case_when(Mforma == "kolektiv" ~ sub(",([^,]*)$", " et\\1", MKODOS_urc),
TRUE ~ MKODOS_urc)) %>%
relocate(MKODOS_urc, .after = urcil) %>%
relocate(MR_urc, .after = MKODOS_urc) %>%
relocate(MREVDAT_urc, .after = MR_urc) %>%
relocate(MPOZN_urc, .after = MREVDAT_urc) %>%
mutate(MKODOS_urc = ifelse(MPOZN_urc %in% c("adnot.", "2010 - potvrdil "), "", MKODOS_urc)) %>%
select(-contains(c("M1", "M2", "M3")))
# souradnice
geo <- urcil %>%
mutate(Msour = case_when(str_detect(mapa, "WGS 84:\\s|WGS:\\s|WGS\\s|GPS\\s\\(WGS\\):\\s|\\(WGS\\)") ~
gsub("WGS 84:\\s|WGS:\\s|WGS\\s|GPS\\s\\(WGS\\):\\s|\\(WGS\\)", "", mapa),
TRUE ~ mapa),
Mmap_presn = ifelse(str_detect(Msour, "^ca|\\sm"), str_extract(Msour, "^ca|.......$"), NA),
Msour = ifelse(str_detect(Msour, "^ca|\\sm$"), str_remove(Msour, "^ca|.......$"), Msour),
Mmap_scale = ifelse(str_detect(Msour, "^1"), str_extract(Msour, ".+"), NA),
Msour = ifelse(str_detect(Msour, "^1"), str_remove(Msour, ".+"), Msour),
Mmap_pozn = ifelse(str_detect(Msour, "Ostravská|louky|dosti|6375b|\\d+\\-\\d+\\-\\d+"), str_extract(Msour, ".+"), NA),
Mmap_pozn = ifelse(str_detect(Msour, "\\sopr|\\soprav"), str_extract(Msour, "opr|oprav"), Mmap_pozn),
Msour = ifelse(str_detect(Msour, "Ostravská|louky|dosti|6375b|\\d+\\-\\d+\\-\\d+"), str_remove(Msour, ".+"), Msour)) %>%
unite(MMAPA, c("Mmap_presn", "Mmap_scale", "Mmap_pozn"), sep = " ", na.rm = T, remove = FALSE) %>%
separate(Msour, into=c("MN", "ME"), sep="N|\\/", extra = "merge", remove = F) %>%
mutate(ME = gsub(",\\s|\\.\\s|;\\s|E|opr|oprav", "", ME),
MN = gsub("\\.", ",", MN),
ME = gsub("\\.", ",", ME),
MN = str_trim(MN),
MN = gsub("°,|; ", "°", MN),
MN = gsub("\"", "'°''", MN),
MN = gsub("' |´", "'", MN),
ME = str_trim(ME),
ME = gsub("´", "'", ME)) %>%
mutate(MSIRKA = "N",
MDELKA = "E",
MNst = str_extract(MN, "[^°]+"),        # N N N N N N N N N
MNmin = gsub("^.*°", "", MN),
MNmin = gsub("'.*$", "", MNmin),
MNvte = str_remove(MN, "[^']+"),
MNvte = gsub("'|''|°", "", MNvte),
MEst = str_extract(ME, "[^°]+"),        # E E E E E E E E E
MEmin = gsub("^.*°", "", ME),
MEmin = gsub("'.*$", "", MEmin),
MEvte = str_remove(ME, "[^']+"),
MEvte = gsub("'|''|°", "", MEvte),
MN_temp = MNst,
ME_temp = MEst,
MNst = ifelse(MN_temp == "432342,4", "43", MNst),  # uprava dvou spec pripadu
MNmin = ifelse(MN_temp == "432342,4", "23", MNmin),
MNvte = ifelse(MN_temp == "432342,4", "42,4", MNvte),
MEst = ifelse(ME_temp == "181202,8", "18", MEst),
MEmin = ifelse(ME_temp == "181202,8", "12", MEmin),
MEvte = ifelse(ME_temp == "181202,8", "02,8", MEvte)) %>%
select(-MN_temp, -ME_temp) %>%
relocate(Msour, .after = mapa) %>%
relocate(Mmap_presn, .after = Msour) %>%
relocate(Mmap_scale, .after = Msour) %>%
relocate(Mmap_pozn, .after = Msour) %>%
relocate(MEvte, .after = Mmap_presn) %>%
relocate(MEmin, .after = Mmap_presn) %>%
relocate(MEst, .after = Mmap_presn) %>%
relocate(MNvte, .after = Mmap_presn) %>%
relocate(MNmin, .after = Mmap_presn) %>%
relocate(MNst, .after = Mmap_presn) %>%
# elevation
mutate(Mele_pznk = ifelse(str_detect(nvyska, "nad|kolem|cca|ca"), word(nvyska, 1), ""),
Mnv = ifelse(str_detect(nvyska, "-"), gsub("[^[:digit:], -]", "", nvyska), # 640 - 730 m n.m. -> odstranit mnm
parse_number(nvyska)),
# MMNM = ifelse(str_detect(MMNM, "\\W\\s\\W"), gsub("\\W\\s\\W", "\\s\\-\\s", MMNM), MMNM)) %>%
Mnv = ifelse(str_detect(Mnv, "-\\s-"), gsub("-\\s-", " - ", Mnv), Mnv),
Mnv = gsub("\\s", "", Mnv)) %>%
unite(MMNM, c("Mele_pznk", "Mnv"), sep = " ", na.rm = T, remove = FALSE) %>%
relocate(MMNM, .after = nvyska) %>%
relocate(Mele_pznk, .after = MMNM) %>%
mutate(MMNM = str_trim(MMNM)) %>%
# lokalita
mutate(MLOKALITA = ifelse(is.na(katastr), lokalita_geo, katastr),
MLOKALITA = ifelse(MLOKALITA == "", lokalita_geo, MLOKALITA),
MLOKALITA = ifelse(is.na(MLOKALITA), oblast, MLOKALITA)) %>%
relocate(MLOKALITA, .after = "katastr") %>%
mutate(across(everything(), ~ gsub("\\s{2}", " ", .)))
# taxon
taxon <- geo %>%
# select(celed, druh, syn, var) %>%
mutate(
# celed
MceledLAT = word(celed, 1),
MceledCZ = gsub("\\(|\\)", "", word(celed, 2)),
# nomen
Mrod = word(druh, 1),
Mdruh = ifelse(str_detect(druh, "^\\w+\\sx\\s"), word(druh, 3), word(druh, 2)),
MNOMEN = paste(Mrod, Mdruh),
Mautor = ifelse(str_detect(druh, "^\\w+\\sx\\s"),
str_remove(druh, "^\\w+\\sx\\s\\w+\\s"),
str_remove(druh, "^\\w+\\s\\w+\\s"))) %>%
left_join(biolib %>% dplyr::select('4nazevKategorie', '5nomen', '8nadrizenyTaxon'),
by = c("MNOMEN" = "5nomen"), keep = T) %>%
relocate(MNOMEN, .after = druh) %>%
relocate('8nadrizenyTaxon', .after = var) %>%
relocate('5nomen', .after = var) %>%
relocate('4nazevKategorie', .after = var) %>%
rename(BLnomen = '5nomen') %>%
mutate(MTAXON = ifelse(is.na(BLnomen), MNOMEN, BLnomen)) %>%
relocate(MTAXON, .after = MNOMEN)
# nesp <- porovnani %>%
#   filter(is.na(stromKat)) %>% # 1509
#   distinct() # 499
# odborne urceni pozn
ou <- taxon %>%
mutate(MPOZN_OU = case_when(!is.na(MPOZN_urc) ~ paste0(MPOZN_urc, "\n" , reviz),
!is.na(reviz) ~ paste0(reviz),
TRUE ~ "")) %>%
relocate(MPOZN_OU, .after = urcil_d) %>%
relocate(reviz, .after = urcil_d)
# set samostatnych poli
modif_tab <- ou %>%
mutate(X = NA,
'1typPredmetuKod' = "BO",
'2sbirkaCisloEvidInt' = projekt,
'3podsbirkaCislo' = "Pb",
'16fondKod' = "bot",
'17skupinaKod' = "herbT",
MPOCETKS = ifelse(pocet_kusu == "", "1", pocet_kusu),
MPOCETKS = ifelse(pocet_kusu == "návrh na SPR", "1", MPOCETKS),
MPOCETKS = ifelse(is.na(MPOCETKS), "1", MPOCETKS),
MNABYTI = case_when(nabyti == "dar" ~ "D",
nabyti %in% c("nákup", "Nákup", "nákup ", "nkup") ~ "K",
nabyti %in% c("sběr", "sběr ", "svěr") ~ "V"),
MPODSKUP = substr(sub("\\s", "", pskup), 1,20)) # smazat mezeru, orezat na 20 znaku)
# ------------------------------------- P O K R A C U J   Z D E !!!
# ------------------------------------- D O P L N I T !!!
mus_tab <- modif_tab %>%
select(
'1typPredmetuKod' = '1typPredmetuKod',        # !! povinne !! (BI, BO, ZO, EN, GE nebo PL)
'2sbirkaCisloEvidInt'= '2sbirkaCisloEvidInt', # !! povinne !! ze slovniku
'3podsbirkaCislo' = '3podsbirkaCislo',        # !! povinne !! ze slovniku
'4ciselnaRadaKod'= Mrada,                     # !! povinne !! ze slovniku
'5SPCislo' = MINVC,                           # !! povinne !!
'6SPcisloCES'= X,
'7SPPoradoveCislo' = MPORC,
'8SPCisloDo'= X,
'9SPPoradoveCisloDo'= X,
'10SPPoradoveCisloSub' = X,
'11SPPoradoveCisloSubDo' = X,
'12SPDatumZapisu' = create_date,
'13jinaEvidence1Cislo' = X, # samost import
'14jinaEvidence2Cislo' = X,
'15jinaEvidence3Cislo' = X,
'16fondKod' = '16fondKod',
'17skupinaKod' = '17skupinaKod',
'18materialovaSkupinaKod' = X,
'19oznaceniNazev' = X, # u botaniky nevyplnovat
'20taxon' = MTAXON, #
'21snadTaxon' = X,
'22SPPocetKusu' = MPOCETKS,
'23urcilOsobaKod' = MKODOS_urc,
'24dataceUrceniHodnota' = X,
'25odborneUrceniPoznamka' = MPOZN_OU,
'26odborneUrceniPopis' = X,
'27lokalita' = MLOKALITA,
'28sirkaNS' = MSIRKA,
'29sirkaStupne' = MNst,
'30sirkaMinuty' = MNmin,
'31sirkaVteriny' = MNvte,
'32delkaEW' = MDELKA,
'33delkaStupne' = MEst,
'34delkaMinuty' = MEmin,
'35delkaVteriny' = MEvte,
'36vyska' = X, '37specifikaceLokality' = X,
'38mapa' = MMAPA, '39ctverec' = ctverec,
'40charakteristika' = X,
'41puvodniPopisLokality' = X,
'42nadmorskaVyska' = MMNM, '43nalezPoznamka' = X,
'44dataceHodnota' = X, '45datacePoznamka' = X,
'46textEtiketa' = X, '47typ' = X,
'48cf' = X, '49var' = var,
'50herbar' = X, '51preparat' = X,
'52pocetSamcu' = X, '53pocetSamic' = X, '54pocetJuv' = X,
'55collectio' = X,
'56stalaLokaceKod' = X, '57aktualniLokaceKod' = X, # samost import
'58SPPoznamka' = X,
'59zpusobNabytiKod' = MNABYTI,
'60nabytiPredmetuDatum' = nabyti_d,
'61nabytiPredmetuDoklad' = X, '62nabytiPoznamka' = X,
'63nabytiPredchoziMajitelSlovy' = X,'64prirustekCislo' = MPRIRC,
'65ciselnaRadaPrirustkuKod' = X,   # ------------------------------------- D O P L N I T !!!
'66nabytiPrirustkuDatum' = X,
'67zakladniCharakteristika' = X,
'68kodPodskupiny1' = MPODSKUP,
'69kodPodskupiny2' = X,'70kodPodskupiny3' = X, '71predmetCizi' = X,
'72SPPapirovaKarta' = X, '73SPKartaJeOpsana' = X,
'74text1' = X,
'75text2' = negat,
'76text3' = zapis_ces,
'77text4' = stav ,
'78text5' = X,
'79SPUIns' = X,'80SPDIns' = create_date, # ------------------------------------- D O P L N I T !!!
'81SPUUpd' = X,'82SPDUpd' = X, # ------------------------------------- D O P L N I T !!!
'83parageneze' = X,'84chronostratigrafie' = X,
'85litostratigrafie' = X,'86poznamkaChrono' = X,
'87poznamkaLito' = X,'88kompletnost' = X,
'89tvar' = X,'90barva' = X,
'91zrnitost' = X,'92biozona' = X,
'93fertilita' = X,'94zpusobZachovani' = X,
'95originalniJmeno' = druh, #                  !!!   puvodni jmeno druhu
'96zoPohlavi' = X,
'97zoStari' = X,'98snadChrono' = X,
'99snadLito' = X, '100klicovaSlova' = syn,
'101nazevKU' = X, '102fytochorion' = X,
'103lokalitaDoplneni' = lokalita_ekol, '104lokalitaOriginalni' = X,
'105stanoviste' = X, '106mikroStanoviste' = X,
'107biotopKod' = X, '108zpusobZiskani' = X,
'109souradniceZdroj' = X, '110souradnicePresnost' = X,
'111cisloSberu' = X, '112rokAkvizice' = X,
'113text6' = X, '114text7' = X,
'115text8' = dostal_rc, '116text9' = dostal_dc,
'117text10' = X, '118rokPrirustku' = X,
'119kategorieTaxonuNazev' = '4nazevKategorie', # povinne
'120nadrizenyTaxonNom' = '8nadrizenyTaxon')
oper_bio <- mus_tab
imp <- "bio"
mus_tab10 <- mus_tab %>% slice(1:10)
imp <- "bio10"
nchar(mus_tab$'42nadmorskaVyska')
View(mus_tab10)
require(tidyverse)
require(readxl)
require(stringr) # ::str_split_fixed
require(stringi) # ::stri_detect_fixed - detect empty string
require(mdbr) # ::read_mdb
require(RODBC) # ::read_mdb
require(odbc) # ::read_mdb
require(xlsx) # write excel in sheets
path_snd <- "C:/Users/krizova/Documents/R/piskoviste/"
require(readxl)
Rev_data <- read_excel("C:/Users/krizova/Documents/R/piskoviste/HELA/NG_stavy/Rev_data.xlsx", col_types="text")
Sb_stav <- read_excel("C:/Users/krizova/Documents/R/piskoviste/HELA/NG_stavy/Sb_stav.xlsx", col_types="text")
revdata <- Rev_data %>%
select(sb_data_id, rev_data_id, datum_rev) %>%
mutate(MDATE_rev = as.POSIXct(datum_rev)) %>%
group_by(sb_data_id) %>%
mutate(isDupl = ifelse(n() == 1, F, T)) %>%
ungroup() %>%
arrange(sb_data_id, MDATE_rev) %>%
select(-datum_rev)
sbstav <- Sb_stav %>%
mutate(Mdatum = case_when(sb_data_id == "40934" ~ "2007-01-01 00:00:00",
sb_data_id == "352912" ~ "2010-01-01 00:00:00",
sb_data_id == "41380" ~ "2022-09-06 00:00:00",
TRUE ~ datum)) %>%
select(sb_data_id, Mdatum, MSTAV, MPOPISSTAVU) %>%
drop_na(MSTAV) %>%
mutate(MDATE_stav = as.POSIXct(Mdatum)) %>%
group_by(sb_data_id) %>%
# mutate(idid = seq_along(sb_data_id)) %>%
ungroup() %>%
arrange(sb_data_id, MDATE_stav) %>%
select(-Mdatum)
View(Rev_data)
join <- left_join(revdata, sbstav, by = "sb_data_id") %>%
select(1,2,3,7,5,6)
View(join)
View(sbstav)
fin <- join %>%
# drop_na(MSTAV) %>%
mutate(isDate = ifelse(MDATE_stav < MDATE_rev, "mensi", "VETSI"),
kk_MSTAV = ifelse(MDATE_stav < MDATE_rev, MSTAV, NA),
kk_MPOPISSTAVU = ifelse(MDATE_stav < MDATE_rev, MPOPISSTAVU, NA))
View(join)
View(fin)
check <- fin %>% group_by(sb_data_id) %>% filter(n()>2)
View(check)
fin <- join %>%
# drop_na(MSTAV) %>%
mutate(isDate = ifelse(MDATE_stav < MDATE_rev, "mensi", "VETSI"),
kk_MSTAV = ifelse(MDATE_stav < MDATE_rev, MSTAV, NA),
kk_MPOPISSTAVU = ifelse(MDATE_stav < MDATE_rev, MPOPISSTAVU, NA)) %>%
distinct(sb_data_id, rev_data_id, .keep_all = TRUE) %>%
# distinct(sb_data_id, MDATE_rev, .keep_all = TRUE) %>%
select(sb_data_id, rev_data_id, "datum_rev" = MDATE_rev, "datum_stav" = MDATE_stav, "MSTAV" = kk_MSTAV, "MPOPISSTAVU" = kk_MPOPISSTAVU)
12*9
3.7-1.9
View(check)
closedate <- join %>%
group_by(sb_data_id) %>%
mutate(diff = as.numeric(abs(difftime(MDATE_rev, MDATE_stav, units = "days"))))
View(closedate)
closedate <- join %>%
group_by(sb_data_id) %>%
mutate(diff = as.numeric(difftime(MDATE_rev, MDATE_stav, units = "days")))
closedate <- join %>%
mutate(diff = as.numeric(difftime(MDATE_rev, MDATE_stav, units = "days"))) %>%
group_by(sb_data_id, rev_data_id)
closedate <- join %>%
mutate(diff = as.numeric(difftime(MDATE_rev, MDATE_stav, units = "days"))) %>%
group_by(sb_data_id, rev_data_id) %>%
filter(diff >= 0) %>%
filter(diff == min(diff)) %>%
ungroup()
closedate <- join %>%
mutate(diff = as.numeric(difftime(MDATE_rev, MDATE_stav, units = "days"))) %>%
group_by(sb_data_id, rev_data_id) %>%
filter(diff >= 0|is.na(diff)) %>%
filter(diff == min(diff)) %>%
ungroup()
closedate <- join %>%
mutate(diff = as.numeric(difftime(MDATE_rev, MDATE_stav, units = "days"))) %>%
group_by(sb_data_id, rev_data_id) %>%
filter(diff >= 0|is.na(diff))
closedate <- join %>%
mutate(diff = as.numeric(difftime(MDATE_rev, MDATE_stav, units = "days"))) %>%
group_by(sb_data_id, rev_data_id)
closedate <- join %>%
mutate(diff = as.numeric(difftime(MDATE_rev, MDATE_stav, units = "days"))) %>%
group_by(sb_data_id, rev_data_id) %>%
mutate(diff = ifelse(diff < 0, NA, diff))
closedate <- join %>%
mutate(diff = as.numeric(difftime(MDATE_rev, MDATE_stav, units = "days"))) %>%
group_by(sb_data_id, rev_data_id) %>%
mutate(diff = ifelse(diff < 0, NA, diff)) %>%
# filter(diff >= 0|is.na(diff))
filter(diff == min(diff)) %>%
ungroup()
%>%
closedate <- join %>%
mutate(diff = as.numeric(difftime(MDATE_rev, MDATE_stav, units = "days"))) %>%
group_by(sb_data_id, rev_data_id) %>%
mutate(diff = ifelse(diff < 0, NA, diff))
closedate <- join %>%
mutate(diff = as.numeric(difftime(MDATE_rev, MDATE_stav, units = "days"))) %>%
group_by(sb_data_id, rev_data_id) %>%
mutate(diff = ifelse(diff < 0, NA, diff)) %>%
filter(!is.na(diff) & diff == min(diff, na.rm = TRUE))
closedate <- join %>%
mutate(diff = as.numeric(difftime(MDATE_rev, MDATE_stav, units = "days"))) %>%
group_by(sb_data_id, rev_data_id) %>%
mutate(diff = ifelse(diff < 0, NA, diff)) %>%
group_modify(~ {
if (all(is.na(.x$diff))) {
.x
} else {
.x %>%
filter(diff == min(diff, na.rm = TRUE))
}
})
fin <- closedate %>%
mutate(kk_MSTAV = MDATE_stav,
kk_MPOPISSTAVU = MDATE_stav)
closedate <- join %>%
mutate(diff = as.numeric(difftime(MDATE_rev, MDATE_stav, units = "days"))) %>%
group_by(sb_data_id, rev_data_id) %>%
mutate(diff = ifelse(diff < 0, NA, diff)) %>%
group_modify(~ {
if (all(is.na(.x$diff))) {
.x
} else {
.x %>%
filter(diff == min(diff, na.rm = TRUE))
}
}) %>%
ungroup()
fin <- closedate %>%
mutate(kk_MSTAV = MDATE_stav,
kk_MPOPISSTAVU = MDATE_stav) %>%
distinct(sb_data_id, rev_data_id)
fin <- closedate %>%
mutate(kk_MSTAV = MDATE_stav,
kk_MPOPISSTAVU = MDATE_stav) %>%
distinct(sb_data_id, rev_data_id, .keep_all = TRUE)
fin <- closedate %>%
mutate(kk_MSTAV = ifelse(is.na(diff), NA, MDATE_stav),
kk_MPOPISSTAVU = ifelse(is.na(diff), NA, MDATE_stav)) %>%
distinct(sb_data_id, rev_data_id, .keep_all = TRUE)
fin <- closedate %>%
mutate(kk_MSTAV = ifelse(is.na(diff), NA, MSTAV),
kk_MPOPISSTAVU = ifelse(is.na(diff), NA, MPOPISSTAVU)) %>%
distinct(sb_data_id, rev_data_id, .keep_all = TRUE)
View(fin)
check <- fin %>% group_by(sb_data_id) %>% filter(n()>4)
View(check)
fin <- closedate %>%
mutate(kk_MSTAV = ifelse(is.na(diff), NA, MSTAV),
kk_MPOPISSTAVU = ifelse(is.na(diff), NA, MPOPISSTAVU)) %>%
distinct(sb_data_id, rev_data_id, .keep_all = TRUE) %>%
# mutate(kk_MSTAV = ifelse(MDATE_stav < MDATE_rev, MSTAV, NA),
#        kk_MPOPISSTAVU = ifelse(MDATE_stav < MDATE_rev, MPOPISSTAVU, NA)) %>%
# distinct(sb_data_id, rev_data_id, .keep_all = TRUE) %>%
# distinct(sb_data_id, MDATE_rev, .keep_all = TRUE) %>%
select(sb_data_id, rev_data_id, "datum_rev" = MDATE_rev, "datum_stav" = MDATE_stav, "MSTAV" = kk_MSTAV, "MPOPISSTAVU" = kk_MPOPISSTAVU)
write.table(fin, file = "M:/03 klienti/narodni galerie - NG/ng konverze/2024-CKS-obrazy/revize-KK/KK_revize_stavy_2kolo_n32852.csv",
quote = F, row.names = F,
sep = ";", dec = ",",
na = "", fileEncoding="cp1250") # quote = F proto, ze v datech jsou uvozovky a v prvnim pripade pri ulozeni pridava backslash
